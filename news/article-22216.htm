<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://winxraynode.github.io/news/article-22216.htm" />
    <meta charset="utf-8">
    <!-- Always force latest IE rendering engine -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>C#语法糖系列聊聊 ref，in 修饰符底层玩法</title>
        <meta name="description" content="自从 C# 7.3 放开 ref 之后，这玩法就太花哨了，也让 C# 这门语言变得越来越多范式，越来越重，这篇我们就来聊聊 ref，本质上来说 ref 的放开就是把 C/C++ 指针的那一套又拿回来了" />
        <link rel="icon" href="/assets/website/img/winxraynode/favicon.ico" type="image/x-icon"/>
    <!-- BOOTSTRAP CSS -->
    <link rel="stylesheet" href="/assets/website/css/winxraynode/bootstrap.min.css">
    <!-- FONT-AWESOME -->
    <link rel="stylesheet" href="/assets/website/css/winxraynode/font-awesome-4.7.0/css/font-awesome.min.css">
    <!-- OWL CAROUSEL -->
    <link href="/assets/website/css/winxraynode/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/winxraynode/owl.theme.default.min.css" rel="stylesheet">
    <!-- LIGHTBOX -->
    <link rel=" stylesheet" href="/assets/website/css/winxraynode/lightbox.css">
    <!--Style CSS file-->
    <link rel=" stylesheet" href="/assets/website/css/winxraynode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-NR13X0JQB2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-NR13X0JQB2');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ====== Preloader ======  -->
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <!-- ======End Preloader ======  -->
    <!-- ======START NAVGITION ======  -->
    <!-- Menu -->
    <div class="main-menu">
        <div class="container">
            <nav class="navbar navbar-expand-lg">
                <!-- logo -->
                                <a class="navbar-brand" href="/">
                    Winxray Node
                </a>
                

                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText">
                    <span class="icon-bar"><i class="fa fa-bars fa-2x"></i></span>
                </button>
                <!--End of Resposive Toggle icon-->
                <div class="collapse navbar-collapse" id="navbarText">
                    <!--Main menu navigation list-->
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                    <!--End of Main menu navigation list-->
                </div>
                <!--End of resposive collapse class-->
            </nav>
        </div>
    </div>
    <!-- Menu -->
    <!-- ====== END NAVGITION ======  -->
    <!-- =======START HEADER=========== -->
    <header class="home category" id="home" data-scroll-index="0">
        <div class="container">
            <div class="row">
                <div class="col-lg-7 home-content mt-md-5 mt-sm-5">
                    <h1 class="heading-primary mb-3 title">
                        C#语法糖系列聊聊 ref，in 修饰符底层玩法                    </h1>
                    <p class="mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </header>
    <!-- ====== END HEADER ======  -->
    <!-- Scroll to Top -->
    <div id="scroll-to-top"><i class="fa fa-arrow-up fa-fw"></i></div>
    <!-- ====== START ABOUT ======  -->
    <section class="about padding" id="about" data-scroll-index="1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="XRayNode每日订阅站" data-url="https://xraynode.github.io">
                  				  				  				<p>自从 C# 7.3 放开 ref 之后，这玩法就太花哨了，也让 C# 这门语言变得越来越多范式，越来越重，这篇我们就来聊聊 ref，本质上来说 ref 的放开就是把 C/C++ 指针的那一套又拿回来了，而且还封装成一套自己的玩法，下面一一解读下。</p> <h2 id="一方法参数上的-ref">一：方法参数上的 ref</h2> <p>我想设计者的初心把 ref 的功能限制的死死的，可能也考虑到 C# 是一门面向业务开发的语言，讲究的是做项目快狠准，性能反而不是第一要素，这个时候的 ref 很简单，看一下代码：</p> <pre><code class="language-C#">     class Program     {         static void Main(string[] args)         {             long price = 0;              GetPrice(ref price);              Console.WriteLine($"output: price={price}");         }          public static void GetPrice(ref long price)         {             price = 10;         }     }  output: price=10</code></pre> <p>我相信很有朋友都知道，方法参数中的<code>ref long price</code>  拿的是栈地址，对栈地址上的值进行修改，自然就修改了指向这些地址上的变量，和引用类型原理一致，接下来我们从汇编角度去验证，在 Price 方法上下一个断点。</p> <pre><code class="language-C#"> D:\net5\ConsoleApp4\ConsoleApp3\Program.cs @ 16: 026b048e 8d4dec          lea     ecx,[ebp-14h] 026b0491 ff15a0ebc800    call    dword ptr ds:[0C8EBA0h] (ConsoleApp3.Program.GetPrice(Int64 ByRef), mdToken: 06000002) 026b0497 90              nop 0:000&gt; bp 026b0491 0:000&gt; g Breakpoint 1 hit ChangeEngineState eax=00000000 ebx=0057f354 ecx=0057f2d4 edx=783aaa50 esi=02979e7c edi=0057f2dc eip=026b0491 esp=0057f2c4 ebp=0057f2e8 iopl=0         nv up ei pl zr na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246 026b0491 ff15a0ebc800    call    dword ptr ds:[0C8EBA0h] ds:002b:00c8eba0=00c2be10</code></pre> <p>从汇编的<code>lea     ecx,[ebp-14h]</code> 就能看到，将<code>ebp-14</code> 这个单元的内存地址给了 ecx，这个 ecx 也就是作为参数传递给了<code>Price</code> 方法，后续的赋值将会影响这个<code>栈位置</code> 上的内容。</p> <h2 id="2-方法返回值上的-ref">2. 方法返回值上的 ref</h2> <p>这就有意思了，进入的时候传地址，回来的时候也想传地址，很显然<code>方法线程栈</code>上的<code>值类型</code> 是传不出去的，毕竟方法返回后，esp,ebp 所控制的方法栈帧空间是要销毁的，所以只能是堆上对象才能实现。</p> <p>为了方便理解，看如下代码：</p> <pre><code class="language-C#">     class Program     {         static void Main(string[] args)         {             ref long price = ref GetCurrentPrice();              price = 12;              Console.WriteLine($"output: price={price}");         }          public static ref long GetCurrentPrice()         {             long[] nums = { 10, 20, 30 };              return ref nums[1];         }     }  output: price=12</code></pre> <p>可以看到当前的<code>price=12</code>,同时<code>nums</code> 这个数组也被修改了，可以用 windbg 验证一下。</p> <pre><code class="language-C#"> 0:000&gt; !dumpheap  -type System.Int64[]   Address       MT     Size 027ca7b0 04c39d00       36       Statistics:       MT    Count    TotalSize Class Name 04c39d00        1           36 System.Int64[] Total 1 objects 0:000&gt; dq 027ca7b0 L4 027ca7b0  00000003`04c39d00 00000000`0000000a 027ca7c0  00000000`0000000c 00000000`0000001e</code></pre> <p>可以看到上面的<code>000000000000000c</code> 被修改成<code>price=12</code> ，这时候有人就不爽了，我不希望外面的代码能修改 price 内容，那怎么办呢？ 还得在<code>ref</code> 后面加上<code>readonly</code> ，改造后如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/f4279856e14181131760eb07d993b271.jpg" alt="C#语法糖系列聊聊 ref，in 修饰符底层玩法"></p> <p>到此时写法就有点疯狂了，对 C# 开发者来说很难理解，对熟悉 C/C++ 指针的朋友来说又很不习惯，太纠结了，下面是一段翻译过来的<code>C/C++指针代码</code> 。</p> <pre><code class="language-C++"> const long long* getcurrentprice();  int main() { 	int i = 0;  	const long long* price = getcurrentprice();  	price = 12;  	printf("num=%d, price=%d \n", i, *price);  }  const long long* getcurrentprice() {  	long long* num = new long long[3]{ 10,20,30 }; 	return num + 1; }</code></pre> <p>说实话，这代码看起来就清爽多了。</p> <h2 id="2-对-ref-变量的-in-操作">2. 对 ref 变量的 in 操作</h2> <p>这又是一套 C/C++ 的玩法，有时候不希望某一个方法对 ref 变量进行修改，注意：是不希望某一个方法进行修改，其他方法是可以的，那这个怎么实现呢？这就需要在入参上加<code>in</code> 前缀，把代码修改一下。</p> <pre><code class="language-C#">     class Program     {         static void Main(string[] args)         {             ref long price = ref GetCurrentPrice();              ModifyPrice(in price);              Console.WriteLine($"output: price={price}");         }          public static ref long GetCurrentPrice()         {             long[] nums = { 10, 20, 30 };              return ref nums[1];         }          public static void ModifyPrice(in long price)         {             price = 12;             Console.WriteLine(price);         }     }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6e89468a5e3d2f0e468724a0ac70f229.jpg" alt="C#语法糖系列聊聊 ref，in 修饰符底层玩法"></p> <p>可以看到，这时候报错了，如果换成 C++ 就很简单了，只需要在参数上把 in 改成 const 即可。</p> <pre><code class="language-C++"> void modifyprice(const long long* price) { 	*price = 12; 	printf("%d", *price); }</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/40e79010e54d638a0441264722297bf2.jpg" alt="C#语法糖系列聊聊 ref，in 修饰符底层玩法"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22215.htm">nohup: redirecting stderr to stdout</a></p>
                                        <p>下一个：<a href="/news/article-22670.htm">领养宠物需要归还吗（领养宠物要花钱嘛）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-17-node-share.htm" title="「11月17日」最高速度21.4M/S，2024年WinXray每天更新免费节点订阅链接">「11月17日」最高速度21.4M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-24-winxray-github.htm" title="「11月24日」最高速度22.3M/S，2024年WinXray每天更新免费节点订阅链接">「11月24日」最高速度22.3M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-free-winxray-node.htm" title="「11月30日」最高速度19.8M/S，2024年WinXray每天更新免费节点订阅链接">「11月30日」最高速度19.8M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-28-free-node-subscribe.htm" title="「11月28日」最高速度22.8M/S，2024年WinXray每天更新免费节点订阅链接">「11月28日」最高速度22.8M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-23-free-high-speed-nodes.htm" title="「9月23日」最高速度22.7M/S，2024年WinXray每天更新免费节点订阅链接">「9月23日」最高速度22.7M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-26-free-node-subscribe.htm" title="「7月26日」最高速度21.3M/S，2024年WinXray每天更新免费节点订阅链接">「7月26日」最高速度21.3M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-winxray-github.htm" title="「11月21日」最高速度19.7M/S，2024年WinXray每天更新免费节点订阅链接">「11月21日」最高速度19.7M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22215.htm" title="nohup: redirecting stderr to stdout">nohup: redirecting stderr to stdout</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-winxray-node-github.htm" title="「12月18日」最高速度22.1M/S，2024年WinXray每天更新免费节点订阅链接">「12月18日」最高速度22.1M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-21-free-subscribe-node.htm" title="「7月21日」最高速度22.2M/S，2024年WinXray每天更新免费节点订阅链接">「7月21日」最高速度22.2M/S，2024年WinXray每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">11</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ====== END ABOUT======  -->
        <!-- ====== START FOOTER BOTTOM======  -->
    <section class="footer-bottom">
        <div class="container">
            <div class="row">
                <div class="offset-md-3 col-md-6 offset-md-3">
                    <!-- START RIGHTS -->
                    <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>WinXray Node节点订阅站 版权所有</p>
                        <p>Powered by WordPress</p>
                    </div>
                    <!-- END RIGHTS -->
                </div>
            </div>
        </div>
    </section>
    <!-- ====== END FOOTER BOTTOM======  -->
    <!-- ====== JS ======  -->
    <!--jquery-3.3.1 js-->
    <script src="/assets/website/js/frontend/winxraynode/jquery-3.3.1.min.js"></script>
    <!-- popper js -->
    <script src="/assets/website/js/frontend/winxraynode/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/winxraynode/bootstrap.min.js"></script>
    <!-- scrollIt js -->
    <script src="/assets/website/js/frontend/winxraynode/scrollIt.min.js"></script>
    <!-- countTo js -->
    <script src="/assets/website/js/frontend/winxraynode/jquery.countTo.js"></script>
    <!-- filter js -->
    <script src="/assets/website/js/frontend/winxraynode/jquery.filterizr.min.js"></script>
    <!-- waypoints js -->
    <script src="/assets/website/js/frontend/winxraynode/waypoints.min.js"></script>
    <!-- owl carousel js -->
    <script src="/assets/website/js/frontend/winxraynode/owl.carousel.min.js"></script>
    <!-- validator js -->
    <script src="/assets/website/js/frontend/winxraynode/validator.js"></script>
    <!-- coustom js -->
    <script src="/assets/website/js/frontend/winxraynode/main.js"></script>
    <!-- lightbox js -->
    <script src="/assets/website/js/frontend/winxraynode/lightbox.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>